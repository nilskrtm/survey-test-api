"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnswerOptionsRoutes = void 0;
const common_routes_config_1 = require("../common/common.routes.config");
const auth_middleware_1 = __importDefault(require("../auth/middleware/auth.middleware"));
const surveys_middleware_1 = __importDefault(require("../surveys/middleware/surveys.middleware"));
const permission_middleware_1 = __importDefault(require("../common/middleware/permission.middleware"));
const paging_middleware_1 = __importDefault(require("../common/middleware/paging.middleware"));
const questions_middleware_1 = __importDefault(require("../questions/middleware/questions.middleware"));
const answer_options_controller_1 = __importDefault(require("./controllers/answer.options.controller"));
const express_validator_1 = require("express-validator");
const body_validation_middleware_1 = __importDefault(require("../common/middleware/body.validation.middleware"));
const answer_options_middleware_1 = __importDefault(require("./middleware/answer.options.middleware"));
class AnswerOptionsRoutes extends common_routes_config_1.CommonRoutesConfig {
    constructor(app) {
        super(app, 'AnswerOptionsRoutes');
    }
    configureRoutes() {
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options`)
            .get(auth_middleware_1.default.validAuthorizationNeeded(true, true), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, paging_middleware_1.default.dummyPagingParameters, answer_options_controller_1.default.listAnswerOptions)
            .post(auth_middleware_1.default.validAuthorizationNeeded(true, false), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, surveys_middleware_1.default.validateSurveyIsDraft, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, (0, express_validator_1.body)('_id').not().exists(), (0, express_validator_1.body)('order').not().exists(), (0, express_validator_1.body)('color').isString().optional(), (0, express_validator_1.body)('picture').isString().optional(), body_validation_middleware_1.default.verifyBodyFieldsErrors, answer_options_middleware_1.default.answerPictureToSetExists, answer_options_controller_1.default.createAnswerOption);
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options/reorder`)
            .patch(auth_middleware_1.default.validAuthorizationNeeded(true, false), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, surveys_middleware_1.default.validateSurveyIsDraft, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, (0, express_validator_1.body)('ordering').isObject().exists(), body_validation_middleware_1.default.verifyBodyFieldsErrors, answer_options_middleware_1.default.isValidAnswerOptionOrdering, answer_options_controller_1.default.reorderAnswerOptions);
        this.app.param(`answerOptionId`, answer_options_middleware_1.default.extractAnswerOptionId);
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options/:answerOptionId`)
            .get(auth_middleware_1.default.validAuthorizationNeeded(true, true), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, answer_options_middleware_1.default.validateAnswerOptionExists, answer_options_controller_1.default.getAnswerOptionById);
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options/:answerOptionId`)
            .delete(auth_middleware_1.default.validAuthorizationNeeded(true, false), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, surveys_middleware_1.default.validateSurveyIsDraft, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, answer_options_middleware_1.default.validateAnswerOptionExists, answer_options_controller_1.default.removeAnswerOption);
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options/:answerOptionId`)
            .put(auth_middleware_1.default.validAuthorizationNeeded(true, false), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, surveys_middleware_1.default.validateSurveyIsDraft, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, (0, express_validator_1.body)('_id').not().exists(), (0, express_validator_1.body)('order').not().exists(), (0, express_validator_1.body)('color').isString().optional(), (0, express_validator_1.body)('picture').isString().optional(), body_validation_middleware_1.default.verifyBodyFieldsErrors, answer_options_middleware_1.default.answerPictureToSetExists, answer_options_controller_1.default.put);
        this.app
            .route(`/surveys/:surveyId/questions/:questionId/answer-options/:answerOptionId`)
            .patch(auth_middleware_1.default.validAuthorizationNeeded(true, false), surveys_middleware_1.default.extractSurveyId, surveys_middleware_1.default.validateSurveyExists, permission_middleware_1.default.onlySurveyOwnerOrAdminCanDoThisAction, surveys_middleware_1.default.validateSurveyIsDraft, questions_middleware_1.default.extractQuestionId, questions_middleware_1.default.validateQuestionExists, (0, express_validator_1.body)('_id').not().exists(), (0, express_validator_1.body)('order').not().exists(), (0, express_validator_1.body)('color').isString().optional(), (0, express_validator_1.body)('picture').isString().optional(), body_validation_middleware_1.default.verifyBodyFieldsErrors, answer_options_middleware_1.default.answerPictureToSetExists, answer_options_controller_1.default.patch);
        return this.app;
    }
}
exports.AnswerOptionsRoutes = AnswerOptionsRoutes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5zd2VyLm9wdGlvbnMucm91dGVzLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2Fuc3dlci5vcHRpb25zL2Fuc3dlci5vcHRpb25zLnJvdXRlcy5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EseUVBQWtFO0FBQ2xFLHlGQUFnRTtBQUNoRSxrR0FBeUU7QUFDekUsdUdBQThFO0FBQzlFLCtGQUFzRTtBQUN0RSx3R0FBK0U7QUFDL0Usd0dBQThFO0FBQzlFLHlEQUF1QztBQUN2QyxpSEFBdUY7QUFDdkYsdUdBQTZFO0FBRTdFLE1BQWEsbUJBQW9CLFNBQVEseUNBQWtCO0lBQ3pELFlBQVksR0FBZ0I7UUFDMUIsS0FBSyxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLEdBQUc7YUFDTCxLQUFLLENBQUMseURBQXlELENBQUM7YUFDaEUsR0FBRyxDQUNGLHlCQUFjLENBQUMsd0JBQXdCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUNuRCw0QkFBaUIsQ0FBQyxlQUFlLEVBQ2pDLDRCQUFpQixDQUFDLG9CQUFvQixFQUN0QywrQkFBb0IsQ0FBQyxxQ0FBcUMsRUFDMUQsOEJBQW1CLENBQUMsaUJBQWlCLEVBQ3JDLDhCQUFtQixDQUFDLHNCQUFzQixFQUMxQywyQkFBZ0IsQ0FBQyxxQkFBcUIsRUFDdEMsbUNBQXVCLENBQUMsaUJBQWlCLENBQzFDO2FBQ0EsSUFBSSxDQUNILHlCQUFjLENBQUMsd0JBQXdCLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxFQUNwRCw0QkFBaUIsQ0FBQyxlQUFlLEVBQ2pDLDRCQUFpQixDQUFDLG9CQUFvQixFQUN0QywrQkFBb0IsQ0FBQyxxQ0FBcUMsRUFDMUQsNEJBQWlCLENBQUMscUJBQXFCLEVBQ3ZDLDhCQUFtQixDQUFDLGlCQUFpQixFQUNyQyw4QkFBbUIsQ0FBQyxzQkFBc0IsRUFD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